{
  "_args": [
    [
      {
        "raw": "doc",
        "scope": null,
        "escapedName": "doc",
        "name": "doc",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "E:\\Dev\\School\\learnenergy401"
    ]
  ],
  "_from": "doc@latest",
  "_id": "doc@0.0.3",
  "_inCache": true,
  "_location": "/doc",
  "_npmUser": {
    "name": "robskillington",
    "email": "rob.skillington@gmail.com"
  },
  "_npmVersion": "1.2.25",
  "_phantomChildren": {},
  "_requested": {
    "raw": "doc",
    "scope": null,
    "escapedName": "doc",
    "name": "doc",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/doc/-/doc-0.0.3.tgz",
  "_shasum": "2712f573b13a64aa7b860c00dab980cbc2d3e908",
  "_shrinkwrap": null,
  "_spec": "doc",
  "_where": "E:\\Dev\\School\\learnenergy401",
  "author": {
    "name": "Irakli Gozalishvili",
    "email": "rfobic@gmail.com",
    "url": "http://jeditoolkit.com"
  },
  "bugs": {
    "url": "http://github.com/Gozala/doc/issues/"
  },
  "dependencies": {},
  "description": "Runtime documentation tool for REPL",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "2712f573b13a64aa7b860c00dab980cbc2d3e908",
    "tarball": "https://registry.npmjs.org/doc/-/doc-0.0.3.tgz"
  },
  "homepage": "https://github.com/Gozala/doc",
  "id": "doc",
  "keywords": [
    "runtime",
    "documentation",
    "docs",
    "repl"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://jeditoolkit.com/LICENSE"
    }
  ],
  "main": "./index.js",
  "maintainers": [
    {
      "name": "gozala",
      "email": "rfobic@gmail.com"
    },
    {
      "name": "robskillington",
      "email": "rob.skillington@gmail.com"
    }
  ],
  "name": "doc",
  "optionalDependencies": {},
  "readme": "# doc #\n\nRuntime documentation tool for REPL.\n\n## Usage ##\n\nHave you ever wished you could see docs for the given function right out of\nthe REPL? If so, this tool is for you!\n\n```js\nvar doc = require('doc').doc\ndoc(doc) // Prints following output:\n\n/*\nfunction doc(source) { ... }\n-----------------------------------------------\nPrints documentanion of the given function\n*/\n\n// You can also document your own functions:\n\nfunction compose() {\n  doc: \"Returns the composition of a list of functions, where each function\"\n     | \"consumes the return value of the function that follows. In math\"\n     | \"terms, composing the functions `f()`, `g()`, and `h()` produces\"\n     | \"`f(g(h()))`.\"\n     | \"Usage:\"\n     | \"var greet = function(name) { return 'hi: ' + name }\"\n     | \"var exclaim = function(statement) { return statement + '!' }\"\n     | \"var welcome = compose(exclaim, greet)\"\n     | \"welcome('moe')\"\n     | \"//> 'hi: moe!'\"\n\n  var funcs = Array.prototype.slice.call(arguments)\n  return function composed() {\n    var args = slice.call(arguments)\n    var i = funcs.length\n    while (0 <= --i) args = [ funcs[i].apply(this, args) ]\n    return args[0]\n  }\n}\n\ndoc(compose) // Prints following output:\n\n/*\nfunction compose() { ... }\n-----------------------------------------------\nReturns the composition of a list of functions, where each function\nconsumes the return value of the function that follows. In math\nterms, composing the functions `f()`, `g()`, and `h()` produces\n`f(g(h()))`.\nUsage:\nvar greet = function(name) { return 'hi: ' + name }\nvar exclaim = function(statement) { return statement + '!' }\nvar welcome = compose(exclaim, greet)\nwelcome('moe')\n//> 'hi: moe!'\n*/\n\n// Alternative way to documenting functions (Not cross platform though):\n\nfunction sum(a, b) {\n  /**\n  Takes arbitary number of arguments and returns their sum.\n  Usage:\n  sum(7, 2, 8) //> 17\n  **/\n\n  var count = arguments.length, index = 0, value = 0\n  while (index < count) value += arguments[index++]\n  return value\n}\n\ndoc(sum) // Prints following output:\n\n/*\nfunction sum(a, b) { ... }\n-----------------------------------------------\nTakes arbitary number of arguments and returns their sum.\nUsage:\nsum(7, 2, 8) //> 17\n*/\n\n```\n\n## Install ##\n\n    npm install doc\n",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Gozala/doc.git",
    "web": "https://github.com/Gozala/doc"
  },
  "version": "0.0.3"
}
